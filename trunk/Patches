*************************************************************************
*** Applied ***
From: C Hanish Menon <hanish@innomedia.soft.net>
Date: Fri, 10 Dec 1999 17:04:47 +0530
Subject: A patch to allow playing of mpeg files _having headers wrapped around them_

Hi

Recently I downloaded the smpeg source and tried it out.

We are also working on producing a MPEG player based on the Berkeley
mpeg code and mpg123 or Xaudio or so. Recently I was busy with some
other stuffs so I haven't looked into this much. We have tried to
integrate a MMX based DCT algo into the Berkely code. I or my friend
will get back to the list regarding this in a few days time. Till know
we were trying it only internaly.

As you people are also doing this and seem to have more info on
this.(Like we were basing most of the mpeg stream info and all based on
the available source code.) I am thinking of using smpeg source as the
base if possible. However I am interested in getting some of the
optimizations we did integrated into smpeg if possible. One of us will
get back to the list regarding this once we take a stock of what and all
we have done till now.


For now when I tried the smpeg code on certain files which had RIFF
header attached to them I found that the player didn't play them. I
didn't have the RIFF header structure immidiately at hand so I worked
out a _quick ugly fix_ which _never the less_ allows the player to play
these or any other mpeg file with some header structure warped on top of
it properly. It basically searchs the begining of the file for the id.



---------
Keep :-)
HanishKVC
http://hanishkvc.tripod.com/

--- smpeg-0.3.1/MPEG.h	Mon Nov  1 00:23:16 1999
+++ smpeg-0.3.1.new/MPEG.h	Fri Dec 10 15:31:25 1999
@@ -307,6 +307,8 @@
 #include <sys/mman.h>
 #include <fcntl.h>
 
+#define LENGTH_TO_CHECK_FOR_SYSTEM 0x50000	// Added by HanishKVC
+
 class MPEGfile : public MPEGerror,
                  public MPEGaudioaction, public MPEGvideoaction {
 public:
@@ -319,6 +321,11 @@
         Init(MPEG_fp, autoclose);
     }
     void Init(FILE *MPEG_fp, bool autoclose, bool sdlaudio = true) {
+	// Added by HanishKVC
+	Uint8 *pAreaToCheck;
+	long int iOffsetToMatch;
+        const Uint8 PACKET_START_CODE[] = { 0x00, 0x00, 0x01, 0xba };
+	// End of HanishKVC 
         /* Initialize everything to invalid values for cleanup */
         mpeg_fp = MPEG_fp;
         mpeg_area = (caddr_t)-1;
@@ -334,6 +341,56 @@
                 mpeg_size = statb.st_size;
                 mpeg_area = mmap(NULL, mpeg_size, PROT_READ, MAP_SHARED,
                                                      fileno(mpeg_fp), 0);
+		// Added by HanishKVC
+		if(memcmp(mpeg_area,PACKET_START_CODE,4) == 0)
+		{
+		  printf("DebugKVC: A Normal mpeg file\n");
+		}
+		else
+		{
+		  /*
+		  mpeg_area = mpeg_area+0x113e4;
+		  mpeg_size = mpeg_size-0x113e4;
+		  if(memcmp(mpeg_area,PACKET_START_CODE,4) == 0)
+		  {
+		    printf("DebugKVC: A RIFF format mpeg file\n");
+		  }
+		  else
+		  */
+		  printf("DebugKVC: A Not so normal mpeg file\n");
+		  iOffsetToMatch = pAreaToCheck = 0;
+		  while((pAreaToCheck = 
+			(Uint8*)memchr(mpeg_area+iOffsetToMatch,0xba,
+			LENGTH_TO_CHECK_FOR_SYSTEM-iOffsetToMatch)) != NULL)
+		  {
+		    pAreaToCheck = pAreaToCheck-3;
+		    iOffsetToMatch = pAreaToCheck-mpeg_area;
+		    printf("DebugKVC: Possible Location %x\n",iOffsetToMatch);
+		    if(memcmp(pAreaToCheck,PACKET_START_CODE,4) == 0)
+		    {
+		      printf("DebugKVC: System stream found\n");
+		      mpeg_size = mpeg_size-iOffsetToMatch;
+		      mpeg_area = pAreaToCheck;
+		      break;
+		    }
+		    else
+		    {
+		      printf("DebugKVC: Sorry spurious match\n");
+		      iOffsetToMatch = iOffsetToMatch+4; 
+		      // Actually I can skip 3 more chars as 0xba is not there 
+		      // anywhere else in the PACKET_START_CODE. I may be able
+		      // to do more optimizations to search, but as this search
+		      // occurs only once at the begining and that to in a small
+		      // data space, I think this dumb way should be sufficient.
+		    }
+		  } // of while
+		  if(pAreaToCheck == NULL)
+		  {
+		    printf("DebugKVC: Sorry no system stream\n");
+		    exit(1);
+		  }
+		}
+		// End of HanishKVC
                 if ( mpeg_area != (caddr_t)-1 ) {
                     mpeg = new MPEG((Uint8 *)mpeg_area, mpeg_size, 0, sdlaudio);
                     if ( mpeg->WasError() ) {
*************************************************************************
*** Applied ***
Subject: A little patch for smpeg
Date: Tue, 12 Oct 1999 23:11:05 -0500 (CDT)
From: Moses DeJong <dejong@cs.umn.edu>
To: smpeg@lokigames.com


When run with no arguments, smpeg really should print the usage
message out. Here is a quick little patch to 0.2.7 to do just that.


--- copy_plaympeg.c     Tue Oct 12 20:30:27 1999
+++ plaympeg.c  Tue Oct 12 20:33:21 1999
@@ -99,6 +99,11 @@
             fprintf(stderr, "Warning: Unknown option: %s\n", argv[i]);
         }
     }
+    /* If there were no arguments just print the usage */
+    if (argc == 1) {
+        usage(argv[0]);
+        exit(0);
+     }

     /* Play the mpeg files! */
     for ( ; argv[i]; ++i ) {

Thanks
Mo DeJong

*************************************************************************
*** Not applied ***
--- smpeg-0.2.7elgaard.patch ---
# This is a patch for smpeg-0.2.7 to update it to smpeg-0.2.7elgaard
# 
# To apply this patch:
# STEP 1: Chdir to the source directory.
# STEP 2: Run the 'applypatch' program with this patch file as input.
#
# If you do not have 'applypatch', it is part of the 'makepatch' package
# that you can fetch from the Comprehensive Perl Archive Network:
# http://www.perl.com/CPAN/authors/Johan_Vromans/makepatch-x.y.tar.gz
# In the above URL, 'x' should be 2 or higher.
#
# To apply this patch without the use of 'applypatch':
# STEP 1: Chdir to the source directory.
# STEP 2: Run the 'patch' program with this file as input.
#
#### End of Preamble ####

#### Patch data follows ####
diff -c 'smpeg-0.2.7/MPEGaudio.h' 'smpeg-0.2.7elgaard/MPEGaudio.h'
Index: ./MPEGaudio.h
*** ./MPEGaudio.h	Fri Aug  6 23:33:11 1999
--- ./MPEGaudio.h	Sat Oct  9 02:51:34 1999
***************
*** 32,38 ****
  #ifdef THREADED_AUDIO
  #include "MPEGring.h"
  #endif
- 
  /* MPEG/WAVE Sound library
  
     (C) 1997 by Woo-jae Jung */
--- 32,37 ----
***************
*** 208,219 ****
  public:
    void setforcetomono(bool flag);
    void setdownfrequency(int value);
- 
    /******************************/
    /* Frame management variables */
    /******************************/
  private:
!   int decodedframe,currentframe,totalframe;
  
    /***************************************/
    /* Variables made by MPEG-Audio header */
--- 207,217 ----
  public:
    void setforcetomono(bool flag);
    void setdownfrequency(int value);
    /******************************/
    /* Frame management variables */
    /******************************/
  private:
!   int decodedframe,totalframe;
  
    /***************************************/
    /* Variables made by MPEG-Audio header */
diff -c 'smpeg-0.2.7/audio/MPEGaudio.cpp' 'smpeg-0.2.7elgaard/audio/MPEGaudio.cpp'
Index: ./audio/MPEGaudio.cpp
*** ./audio/MPEGaudio.cpp	Fri Aug  6 23:33:11 1999
--- ./audio/MPEGaudio.cpp	Sat Oct  9 02:38:47 1999
***************
*** 18,30 ****
  */
  
  /* A class based on the MPEG stream class, used to parse and play audio */
- 
  #include "MPEGaudio.h"
  
  #ifdef SDL_MIXER             /* From the SDL mixer example library */
  #include "mixer.h"
  #endif
- 
  
  MPEGaudio:: MPEGaudio(MPEGstream *stream)
  {
--- 18,29 ----
  */
  
  /* A class based on the MPEG stream class, used to parse and play audio */
  #include "MPEGaudio.h"
+ extern  int currentframe;
  
  #ifdef SDL_MIXER             /* From the SDL mixer example library */
  #include "mixer.h"
  #endif
  
  MPEGaudio:: MPEGaudio(MPEGstream *stream)
  {
diff -c 'smpeg-0.2.7/audio/mpegtoraw.cpp' 'smpeg-0.2.7elgaard/audio/mpegtoraw.cpp'
Index: ./audio/mpegtoraw.cpp
*** ./audio/mpegtoraw.cpp	Fri Aug  6 23:33:11 1999
--- ./audio/mpegtoraw.cpp	Sat Oct  9 02:55:58 1999
***************
*** 8,14 ****
  #ifdef HAVE_CONFIG_H
  #include "config.h"
  #endif
! 
  #include <math.h>
  #include <stdlib.h>
  #include <string.h>
--- 8,15 ----
  #ifdef HAVE_CONFIG_H
  #include "config.h"
  #endif
! extern int currentframe;
! extern float audioFPS;
  #include <math.h>
  #include <stdlib.h>
  #include <string.h>
***************
*** 161,166 ****
--- 162,168 ----
      c &= 0xf;
      protection = c & 1;
      layer = 4 - ((c >> 1) & 3);
+ 
      version = (_mpegversion) ((c >> 3) ^ 1);
  
      c = mpeg->copy_byte() >> 1;
***************
*** 241,246 ****
--- 243,249 ----
  	                     -(protection?0:2)
  	                     -4;
      }
+     audioFPS = 1000.0*bitrate[version][layer-1][bitrateindex]/framesize/8.0;
    }
  
    /* Fill the buffer with new data */
***************
*** 258,263 ****
--- 261,267 ----
  
  bool MPEGaudio::run( int frames )
  {
+   printf("frames=%d\n", frames);
      for( ; frames; frames-- )
      {
          if( loadheader() == false ) {
***************
*** 326,332 ****
              len = 0;
          } else {
              SDL_MixAudio(stream, rbuf, copylen, volume);
!             ++audio->currentframe;
              audio->ring->ReadDone();
  //fprintf(stderr, "-");
              len -= copylen;
--- 330,336 ----
              len = 0;
          } else {
              SDL_MixAudio(stream, rbuf, copylen, volume);
!             ++currentframe;
              audio->ring->ReadDone();
  //fprintf(stderr, "-");
              len -= copylen;
***************
*** 357,362 ****
--- 361,368 ----
      audio->rawdata = (Sint16 *)stream;
      audio->rawdatawriteoffset = 0;
      audio->run(len/audio->samplesperframe);
+     printf("len = %d, samplesperframe=%d\n", len , samplesperframe);
+ 
      len -= audio->rawdatawriteoffset;
      stream += audio->rawdatawriteoffset*2;
  
diff -c 'smpeg-0.2.7/plaympeg.c' 'smpeg-0.2.7elgaard/plaympeg.c'
Index: ./plaympeg.c
*** ./plaympeg.c	Fri Aug  6 23:33:12 1999
--- ./plaympeg.c	Sat Oct  9 03:10:13 1999
***************
*** 22,27 ****
--- 22,28 ----
  
  #include "smpeg.h"
  
+ 
  void usage(char *argv0)
  {
      printf(
diff -c 'smpeg-0.2.7/video/gdith.cpp' 'smpeg-0.2.7elgaard/video/gdith.cpp'
Index: ./video/gdith.cpp
*** ./video/gdith.cpp	Thu Jul 15 20:39:57 1999
--- ./video/gdith.cpp	Sat Oct  9 02:38:47 1999
***************
*** 91,96 ****
--- 91,98 ----
  
  /* Frame Rate Info */
  extern int framerate;
+ extern float audioFPS;
+ extern int currentframe; //elgaard, audio
  
  /* Video rates table */
  /* Cheat on Vid rates, round to 30, and use 30 if illegal value 
***************
*** 276,283 ****
  #define SLOW_START_INCREMENT    0.3
  
  /* Define this to debug the frame scheduler */
! //#define DEBUG_MPEG_SCHEDULING
! 
  
  int timeSync( VidStream* vid_stream )
  {
--- 278,284 ----
  #define SLOW_START_INCREMENT    0.3
  
  /* Define this to debug the frame scheduler */
! #define DEBUG_MPEG_SCHEDULING // elgaard
  
  int timeSync( VidStream* vid_stream )
  {
***************
*** 309,317 ****
              vid_stream->rate_deal = framerate;
              break;
          }
          if ( vid_stream->rate_deal ) {
              vid_stream->_oneFrameTime = 1.0 / vid_stream->rate_deal;
!             vid_stream->_oneFrameTime *= 1.004;  /* Experimental */
  //printf( "One frame time %f, %d fps\n", vid_stream->_oneFrameTime, vid_stream->rate_deal );
          }
      }
--- 310,319 ----
              vid_stream->rate_deal = framerate;
              break;
          }
+         //vid_stream->rate_deal = vid_stream->rate_deal - (vid_stream->totNumFrames - currentframe);
          if ( vid_stream->rate_deal ) {
              vid_stream->_oneFrameTime = 1.0 / vid_stream->rate_deal;
!             //          vid_stream->_oneFrameTime *= 1.004;  /* Experimental */
  //printf( "One frame time %f, %d fps\n", vid_stream->_oneFrameTime, vid_stream->rate_deal );
          }
      }
***************
*** 331,346 ****
          double time_behind;
  
          /* Calculate the frame time relative to real time */
!         time_behind = ReadSysClock() - vid_stream->_nowFrameTime;
! 
  #ifdef DEBUG_MPEG_SCHEDULING
! //printf("Frame %d: frame time: %f, real time: %f, time behind: %f\n", vid_stream->totNumFrames, vid_stream->_nowFrameTime, ReadSysClock(), time_behind);
  #endif
  
          /* Allow up to MAX_FUDGE_TIME of delay in output */
          if ( time_behind < -TIMESLICE ) {
              time_behind = -time_behind;
!             vid_stream->_skipCount = 0;
  #ifdef DEBUG_MPEG_SCHEDULING
  printf("Ahead!  Sleeping %f\n", time_behind-TIMESLICE);
  #endif
--- 333,351 ----
          double time_behind;
  
          /* Calculate the frame time relative to real time */
! 	//        time_behind = ReadSysClock() - vid_stream->_nowFrameTime;
! 	//        time_behind = -(vid_stream->totNumFrames - currentframe) *vid_stream->_oneFrameTime;	
!         time_behind = -(vid_stream->totNumFrames*audioFPS - (int)((float)currentframe*vid_stream->rate_deal)) *vid_stream->_oneFrameTime/vid_stream->rate_deal;
  #ifdef DEBUG_MPEG_SCHEDULING
! printf("Frame %d/%d: frame time: %f, real time: %f, time behind: %f\n", vid_stream->totNumFrames, currentframe,vid_stream->_nowFrameTime, ReadSysClock(), time_behind);
  #endif
  
          /* Allow up to MAX_FUDGE_TIME of delay in output */
          if ( time_behind < -TIMESLICE ) {
              time_behind = -time_behind;
!             vid_stream->_skipCount = 0; //vid_stream->totNumFrames - currentframe ;
!             // elgaard
!             //vid_stream->_skipCount = 0;
  #ifdef DEBUG_MPEG_SCHEDULING
  printf("Ahead!  Sleeping %f\n", time_behind-TIMESLICE);
  #endif
***************
*** 370,375 ****
--- 375,381 ----
  printf("Way too far behind, losing time sync...\n");
  #endif
  #if 0 // This results in smoother video, but sync's terribly on slow machines
+ // elgaard, was 0
                  vid_stream->_nowFrameTime = ReadSysClock() - (MAX_FUDGE_TIME*2);
  #endif
              }
diff -c 'smpeg-0.2.7/video/video.cpp' 'smpeg-0.2.7elgaard/video/video.cpp'
Index: ./video/video.cpp
*** ./video/video.cpp	Tue Jun 22 23:50:44 1999
--- ./video/video.cpp	Sat Oct  9 02:38:47 1999
***************
*** 175,180 ****
--- 175,182 ----
    if ANALYSIS has been defined.
  */
  
+ int  currentframe;
+ float audioFPS=40.0;
  #ifdef ANALYSIS
  
  
#### End of Patch data ####

#### ApplyPatch data follows ####
# Data version        : 1.0
# Date generated      : Sat Oct  9 03:11:25 1999
# Generated by        : makepatch 2.00
# Recurse directories : Yes
# Excluded files      : (\A|/)Makefile\Z
#                       (\A|/)GNUmake\Z
# p 'MPEGaudio.h' 10062 939430294 0100644
# p 'audio/MPEGaudio.cpp' 5805 939429527 0100644
# p 'audio/mpegtoraw.cpp' 8373 939430558 0100644
# p 'plaympeg.c' 5111 939431413 0100644
# p 'video/gdith.cpp' 16046 939429527 0100644
# p 'video/video.cpp' 125492 939429527 0100644
#### End of ApplyPatch data ####

#### End of Patch kit [created: Sat Oct  9 03:11:25 1999] ####
#### Checksum: 320 9807 48717 ####
