*************************************************************************
*** Applied ***
Subject: A little patch for smpeg
Date: Tue, 12 Oct 1999 23:11:05 -0500 (CDT)
From: Moses DeJong <dejong@cs.umn.edu>
To: smpeg@lokigames.com


When run with no arguments, smpeg really should print the usage
message out. Here is a quick little patch to 0.2.7 to do just that.


--- copy_plaympeg.c     Tue Oct 12 20:30:27 1999
+++ plaympeg.c  Tue Oct 12 20:33:21 1999
@@ -99,6 +99,11 @@
             fprintf(stderr, "Warning: Unknown option: %s\n", argv[i]);
         }
     }
+    /* If there were no arguments just print the usage */
+    if (argc == 1) {
+        usage(argv[0]);
+        exit(0);
+     }

     /* Play the mpeg files! */
     for ( ; argv[i]; ++i ) {

Thanks
Mo DeJong

*************************************************************************
*** Not applied ***
--- smpeg-0.2.7elgaard.patch ---
# This is a patch for smpeg-0.2.7 to update it to smpeg-0.2.7elgaard
# 
# To apply this patch:
# STEP 1: Chdir to the source directory.
# STEP 2: Run the 'applypatch' program with this patch file as input.
#
# If you do not have 'applypatch', it is part of the 'makepatch' package
# that you can fetch from the Comprehensive Perl Archive Network:
# http://www.perl.com/CPAN/authors/Johan_Vromans/makepatch-x.y.tar.gz
# In the above URL, 'x' should be 2 or higher.
#
# To apply this patch without the use of 'applypatch':
# STEP 1: Chdir to the source directory.
# STEP 2: Run the 'patch' program with this file as input.
#
#### End of Preamble ####

#### Patch data follows ####
diff -c 'smpeg-0.2.7/MPEGaudio.h' 'smpeg-0.2.7elgaard/MPEGaudio.h'
Index: ./MPEGaudio.h
*** ./MPEGaudio.h	Fri Aug  6 23:33:11 1999
--- ./MPEGaudio.h	Sat Oct  9 02:51:34 1999
***************
*** 32,38 ****
  #ifdef THREADED_AUDIO
  #include "MPEGring.h"
  #endif
- 
  /* MPEG/WAVE Sound library
  
     (C) 1997 by Woo-jae Jung */
--- 32,37 ----
***************
*** 208,219 ****
  public:
    void setforcetomono(bool flag);
    void setdownfrequency(int value);
- 
    /******************************/
    /* Frame management variables */
    /******************************/
  private:
!   int decodedframe,currentframe,totalframe;
  
    /***************************************/
    /* Variables made by MPEG-Audio header */
--- 207,217 ----
  public:
    void setforcetomono(bool flag);
    void setdownfrequency(int value);
    /******************************/
    /* Frame management variables */
    /******************************/
  private:
!   int decodedframe,totalframe;
  
    /***************************************/
    /* Variables made by MPEG-Audio header */
diff -c 'smpeg-0.2.7/audio/MPEGaudio.cpp' 'smpeg-0.2.7elgaard/audio/MPEGaudio.cpp'
Index: ./audio/MPEGaudio.cpp
*** ./audio/MPEGaudio.cpp	Fri Aug  6 23:33:11 1999
--- ./audio/MPEGaudio.cpp	Sat Oct  9 02:38:47 1999
***************
*** 18,30 ****
  */
  
  /* A class based on the MPEG stream class, used to parse and play audio */
- 
  #include "MPEGaudio.h"
  
  #ifdef SDL_MIXER             /* From the SDL mixer example library */
  #include "mixer.h"
  #endif
- 
  
  MPEGaudio:: MPEGaudio(MPEGstream *stream)
  {
--- 18,29 ----
  */
  
  /* A class based on the MPEG stream class, used to parse and play audio */
  #include "MPEGaudio.h"
+ extern  int currentframe;
  
  #ifdef SDL_MIXER             /* From the SDL mixer example library */
  #include "mixer.h"
  #endif
  
  MPEGaudio:: MPEGaudio(MPEGstream *stream)
  {
diff -c 'smpeg-0.2.7/audio/mpegtoraw.cpp' 'smpeg-0.2.7elgaard/audio/mpegtoraw.cpp'
Index: ./audio/mpegtoraw.cpp
*** ./audio/mpegtoraw.cpp	Fri Aug  6 23:33:11 1999
--- ./audio/mpegtoraw.cpp	Sat Oct  9 02:55:58 1999
***************
*** 8,14 ****
  #ifdef HAVE_CONFIG_H
  #include "config.h"
  #endif
! 
  #include <math.h>
  #include <stdlib.h>
  #include <string.h>
--- 8,15 ----
  #ifdef HAVE_CONFIG_H
  #include "config.h"
  #endif
! extern int currentframe;
! extern float audioFPS;
  #include <math.h>
  #include <stdlib.h>
  #include <string.h>
***************
*** 161,166 ****
--- 162,168 ----
      c &= 0xf;
      protection = c & 1;
      layer = 4 - ((c >> 1) & 3);
+ 
      version = (_mpegversion) ((c >> 3) ^ 1);
  
      c = mpeg->copy_byte() >> 1;
***************
*** 241,246 ****
--- 243,249 ----
  	                     -(protection?0:2)
  	                     -4;
      }
+     audioFPS = 1000.0*bitrate[version][layer-1][bitrateindex]/framesize/8.0;
    }
  
    /* Fill the buffer with new data */
***************
*** 258,263 ****
--- 261,267 ----
  
  bool MPEGaudio::run( int frames )
  {
+   printf("frames=%d\n", frames);
      for( ; frames; frames-- )
      {
          if( loadheader() == false ) {
***************
*** 326,332 ****
              len = 0;
          } else {
              SDL_MixAudio(stream, rbuf, copylen, volume);
!             ++audio->currentframe;
              audio->ring->ReadDone();
  //fprintf(stderr, "-");
              len -= copylen;
--- 330,336 ----
              len = 0;
          } else {
              SDL_MixAudio(stream, rbuf, copylen, volume);
!             ++currentframe;
              audio->ring->ReadDone();
  //fprintf(stderr, "-");
              len -= copylen;
***************
*** 357,362 ****
--- 361,368 ----
      audio->rawdata = (Sint16 *)stream;
      audio->rawdatawriteoffset = 0;
      audio->run(len/audio->samplesperframe);
+     printf("len = %d, samplesperframe=%d\n", len , samplesperframe);
+ 
      len -= audio->rawdatawriteoffset;
      stream += audio->rawdatawriteoffset*2;
  
diff -c 'smpeg-0.2.7/plaympeg.c' 'smpeg-0.2.7elgaard/plaympeg.c'
Index: ./plaympeg.c
*** ./plaympeg.c	Fri Aug  6 23:33:12 1999
--- ./plaympeg.c	Sat Oct  9 03:10:13 1999
***************
*** 22,27 ****
--- 22,28 ----
  
  #include "smpeg.h"
  
+ 
  void usage(char *argv0)
  {
      printf(
diff -c 'smpeg-0.2.7/video/gdith.cpp' 'smpeg-0.2.7elgaard/video/gdith.cpp'
Index: ./video/gdith.cpp
*** ./video/gdith.cpp	Thu Jul 15 20:39:57 1999
--- ./video/gdith.cpp	Sat Oct  9 02:38:47 1999
***************
*** 91,96 ****
--- 91,98 ----
  
  /* Frame Rate Info */
  extern int framerate;
+ extern float audioFPS;
+ extern int currentframe; //elgaard, audio
  
  /* Video rates table */
  /* Cheat on Vid rates, round to 30, and use 30 if illegal value 
***************
*** 276,283 ****
  #define SLOW_START_INCREMENT    0.3
  
  /* Define this to debug the frame scheduler */
! //#define DEBUG_MPEG_SCHEDULING
! 
  
  int timeSync( VidStream* vid_stream )
  {
--- 278,284 ----
  #define SLOW_START_INCREMENT    0.3
  
  /* Define this to debug the frame scheduler */
! #define DEBUG_MPEG_SCHEDULING // elgaard
  
  int timeSync( VidStream* vid_stream )
  {
***************
*** 309,317 ****
              vid_stream->rate_deal = framerate;
              break;
          }
          if ( vid_stream->rate_deal ) {
              vid_stream->_oneFrameTime = 1.0 / vid_stream->rate_deal;
!             vid_stream->_oneFrameTime *= 1.004;  /* Experimental */
  //printf( "One frame time %f, %d fps\n", vid_stream->_oneFrameTime, vid_stream->rate_deal );
          }
      }
--- 310,319 ----
              vid_stream->rate_deal = framerate;
              break;
          }
+         //vid_stream->rate_deal = vid_stream->rate_deal - (vid_stream->totNumFrames - currentframe);
          if ( vid_stream->rate_deal ) {
              vid_stream->_oneFrameTime = 1.0 / vid_stream->rate_deal;
!             //          vid_stream->_oneFrameTime *= 1.004;  /* Experimental */
  //printf( "One frame time %f, %d fps\n", vid_stream->_oneFrameTime, vid_stream->rate_deal );
          }
      }
***************
*** 331,346 ****
          double time_behind;
  
          /* Calculate the frame time relative to real time */
!         time_behind = ReadSysClock() - vid_stream->_nowFrameTime;
! 
  #ifdef DEBUG_MPEG_SCHEDULING
! //printf("Frame %d: frame time: %f, real time: %f, time behind: %f\n", vid_stream->totNumFrames, vid_stream->_nowFrameTime, ReadSysClock(), time_behind);
  #endif
  
          /* Allow up to MAX_FUDGE_TIME of delay in output */
          if ( time_behind < -TIMESLICE ) {
              time_behind = -time_behind;
!             vid_stream->_skipCount = 0;
  #ifdef DEBUG_MPEG_SCHEDULING
  printf("Ahead!  Sleeping %f\n", time_behind-TIMESLICE);
  #endif
--- 333,351 ----
          double time_behind;
  
          /* Calculate the frame time relative to real time */
! 	//        time_behind = ReadSysClock() - vid_stream->_nowFrameTime;
! 	//        time_behind = -(vid_stream->totNumFrames - currentframe) *vid_stream->_oneFrameTime;	
!         time_behind = -(vid_stream->totNumFrames*audioFPS - (int)((float)currentframe*vid_stream->rate_deal)) *vid_stream->_oneFrameTime/vid_stream->rate_deal;
  #ifdef DEBUG_MPEG_SCHEDULING
! printf("Frame %d/%d: frame time: %f, real time: %f, time behind: %f\n", vid_stream->totNumFrames, currentframe,vid_stream->_nowFrameTime, ReadSysClock(), time_behind);
  #endif
  
          /* Allow up to MAX_FUDGE_TIME of delay in output */
          if ( time_behind < -TIMESLICE ) {
              time_behind = -time_behind;
!             vid_stream->_skipCount = 0; //vid_stream->totNumFrames - currentframe ;
!             // elgaard
!             //vid_stream->_skipCount = 0;
  #ifdef DEBUG_MPEG_SCHEDULING
  printf("Ahead!  Sleeping %f\n", time_behind-TIMESLICE);
  #endif
***************
*** 370,375 ****
--- 375,381 ----
  printf("Way too far behind, losing time sync...\n");
  #endif
  #if 0 // This results in smoother video, but sync's terribly on slow machines
+ // elgaard, was 0
                  vid_stream->_nowFrameTime = ReadSysClock() - (MAX_FUDGE_TIME*2);
  #endif
              }
diff -c 'smpeg-0.2.7/video/video.cpp' 'smpeg-0.2.7elgaard/video/video.cpp'
Index: ./video/video.cpp
*** ./video/video.cpp	Tue Jun 22 23:50:44 1999
--- ./video/video.cpp	Sat Oct  9 02:38:47 1999
***************
*** 175,180 ****
--- 175,182 ----
    if ANALYSIS has been defined.
  */
  
+ int  currentframe;
+ float audioFPS=40.0;
  #ifdef ANALYSIS
  
  
#### End of Patch data ####

#### ApplyPatch data follows ####
# Data version        : 1.0
# Date generated      : Sat Oct  9 03:11:25 1999
# Generated by        : makepatch 2.00
# Recurse directories : Yes
# Excluded files      : (\A|/)Makefile\Z
#                       (\A|/)GNUmake\Z
# p 'MPEGaudio.h' 10062 939430294 0100644
# p 'audio/MPEGaudio.cpp' 5805 939429527 0100644
# p 'audio/mpegtoraw.cpp' 8373 939430558 0100644
# p 'plaympeg.c' 5111 939431413 0100644
# p 'video/gdith.cpp' 16046 939429527 0100644
# p 'video/video.cpp' 125492 939429527 0100644
#### End of ApplyPatch data ####

#### End of Patch kit [created: Sat Oct  9 03:11:25 1999] ####
#### Checksum: 320 9807 48717 ####
